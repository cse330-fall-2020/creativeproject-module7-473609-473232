{"version":3,"sources":["fire.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","props","state","messages","database","ref","orderByKey","limitToLast","on","snapshot","message","text","val","id","key","setState","concat","e","preventDefault","push","this","inputEl","value","onSubmit","addMessage","bind","type","el","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAYeA,E,MADJC,EAASC,cAVP,CACXC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,6DACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBC6BFC,E,kDAlCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,SAAU,IAFR,E,iEAIE,IAAD,OAEAd,EAAKe,WAAWC,IAAI,YAAYC,aAAaC,YAAY,KAC/DC,GAAG,eAAe,SAAAC,GAE5B,IAAIC,EAAU,CAAEC,KAAMF,EAASG,MAAOC,GAAIJ,EAASK,KACnD,EAAKC,SAAS,CAAEZ,SAAU,CAACO,GAASM,OAAO,EAAKd,MAAMC,iB,iCAG/Cc,GACTA,EAAEC,iBAEF7B,EAAKe,WAAWC,IAAI,YAAYc,KAAMC,KAAKC,QAAQC,OACnDF,KAAKC,QAAQC,MAAQ,K,+BAEb,IAAD,OACP,OACE,uBAAMC,SAAUH,KAAKI,WAAWC,KAAKL,MAArC,UACE,uBAAOM,KAAK,OAAOrB,IAAM,SAAAsB,GAAE,OAAI,EAAKN,QAAUM,KAC9C,uBAAOD,KAAK,WACZ,6BAEIN,KAAKlB,MAAMC,SAASyB,KAAK,SAAAlB,GAAO,OAAI,6BAAsBA,EAAQC,MAArBD,EAAQG,gB,GA3B/CgB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8f68459.chunk.js","sourcesContent":["import firebase from 'firebase'\nvar config = {\n  apiKey: \"AIzaSyBI3L5Yf8l5khsVzvo_xtPja_isEwMSJME\",\n  authDomain: \"creative-project-ac267.firebaseapp.com\",\n  databaseURL: \"https://creative-project-ac267-default-rtdb.firebaseio.com\",\n  projectId: \"creative-project-ac267\",\n  storageBucket: \"creative-project-ac267.appspot.com\",\n  messagingSenderId: \"555203400107\",\n  appId: \"1:555203400107:web:c7be4d42e88f3ac48e42ee\",\n  measurementId: \"G-S3SSD9PRW4\"\n};\nvar fire = firebase.initializeApp(config);\nexport default fire;","import React, { Component } from 'react';\nimport fire from './fire';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { messages: [] }; // <- set up react state\n  }\n  componentWillMount(){\n    /* Create reference to messages in Firebase Database */\n    let messagesRef = fire.database().ref('messages').orderByKey().limitToLast(100);\n    messagesRef.on('child_added', snapshot => {\n      /* Update React state when message is added at Firebase Database */\n      let message = { text: snapshot.val(), id: snapshot.key };\n      this.setState({ messages: [message].concat(this.state.messages) });\n    })\n  }\n  addMessage(e){\n    e.preventDefault(); // <- prevent form submit from reloading the page\n    /* Send the message to Firebase */\n    fire.database().ref('messages').push( this.inputEl.value );\n    this.inputEl.value = ''; // <- clear the input\n  }\n  render() {\n    return (\n      <form onSubmit={this.addMessage.bind(this)}>\n        <input type=\"text\" ref={ el => this.inputEl = el }/>\n        <input type=\"submit\"/>\n        <ul>\n          { /* Render the list of messages */\n            this.state.messages.map( message => <li key={message.id}>{message.text}</li> )\n          }\n        </ul>\n      </form>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}